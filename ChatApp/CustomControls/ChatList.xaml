<UserControl x:Class="ChatApp.CustomControls.ChatList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ChatApp.CustomControls"  xmlns:viewmodels="clr-namespace:ChatApp.ViewModels"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" MinWidth="406"
             x:Name="Chats">
    <UserControl.Resources>
        <DataTemplate x:Key="ChatButtonItemTemplate">
            <RadioButton GroupName="ChatButton">
                <RadioButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="MinHeight" Value="80"/>
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Command" Value="{Binding DataContext.GetSelectedChatCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                        <Setter Property="CommandParameter" Value="{Binding}"/>
                        <Setter Property="Content" Value="{Binding ContactName}"/>

                        <!--To Select the first Chat-->
                        <Setter Property="IsChecked" Value="{Binding ChatIsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>


                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            CornerRadius="20"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="True"
                                            x:Name="border">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <!--Contain contactName, photo, message, messageTime-->
                                                <RowDefinition Height="Auto"/>

                                                <!--Contain options such as archive chat, pin chat, delete...-->
                                                <RowDefinition Height="Auto"/>

                                            </Grid.RowDefinitions>

                                            <Border Grid.RowSpan="3"
                                                    x:Name="bdChild"
                                                    CornerRadius="20"
                                                    Margin="-10"
                                                    Background="Transparent"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"/>

                                            <!--Region Contact-->
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <!--Profile Photo-->
                                                    <ColumnDefinition Width="Auto"/>

                                                    <!--Contact Name & Photo-->
                                                    <ColumnDefinition/>

                                                    <!--Last Message Time-->
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <Ellipse Width="50" Height="50">
                                                    <Ellipse.Fill>
                                                        <ImageBrush Stretch="UniformToFill" ImageSource="{Binding ContactPhoto, TargetNullValue='/Assets/6.jpg', FallbackValue='/Assets/6.jpg', UpdateSourceTrigger=PropertyChanged}"/>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <!--Contact Name & Message-->
                                                <Grid Grid.Column="1" Margin="20,0">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>

                                                    <TextBlock Text="{Binding ContactName}"
                                                               FontSize="15">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                    <TextBlock Grid.Row="1"
                                                               Text="{Binding Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                               TextTrimming="CharacterEllipsis">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="FontWeight" Value="Normal"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Grid>

                                                <!--Last Message Time-->
                                                <Grid Grid.Column="2">
                                                    <TextBlock Text="{Binding LastMessageTime}"
                                                               HorizontalAlignment="Right"/>
                                                </Grid>
                                            </Grid>

                                            <!--Region Options-->
                                            <Grid Grid.Row="1"
                                                  x:Name="OptionsGrid"
                                                  Height="0">
                                                <StackPanel>
                                                    <Separator Margin="0,10,0,0"/>

                                                <!--Options Button-->
                                                <UniformGrid Grid.Column="1" Columns="4">
                                                    <!--Pin/UnPin chat button-->
                                                    <Button CommandParameter="{Binding}">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonStyle}">
                                                                <Setter Property="Content" Value="{StaticResource pinned}"/>
                                                                    <Setter Property="Command" Value="{Binding DataContext.PinChatCommand, ElementName=Chats}"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ChatIsPinned}" Value="True">
                                                                        <Setter Property="Content" Value="{StaticResource unpin}"/>
                                                                            <Setter Property="Command" Value="{Binding DataContext.UnPinChatCommand, ElementName=Chats}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>

                                                    <!--Archive/UnArchive chat button-->

                                                    <Button CommandParameter="{Binding}">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonStyle}">
                                                                <Setter Property="Content" Value="{StaticResource archive}"/>
                                                                <Setter Property="Command" Value="{Binding DataContext.ArchiveChatCommand, ElementName=Chats}"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ChatIsArchived}" Value="True">
                                                                        <Setter Property="Content" Value="{StaticResource unarchive}"/>
                                                                            <Setter Property="Command" Value="{Binding DataContext.UnArchiveChatCommand, ElementName=Chats}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>

                                                    <Button Content="{StaticResource mute}" Style="{StaticResource IconButtonStyle}"/>

                                                    <Button Content="{StaticResource trash}" Style="{StaticResource IconButtonStyle}"/>
                                                </UniformGrid>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <DoubleAnimation Storyboard.TargetName="OptionsGrid"
                                                                         Storyboard.TargetProperty="Height" To="50"/>
                                                        <ColorAnimation
                                                                        Storyboard.TargetProperty="(Background).Color" From="Transparent" To="#49a078"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>

                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <DoubleAnimation Storyboard.TargetName="OptionsGrid"
                                                                Storyboard.TargetProperty="Height" To="0"/>
                                                        <ColorAnimation
                                                        Storyboard.TargetProperty="(Background).Color" From="#49a078" To="Transparent"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <ColorAnimation Storyboard.TargetName="bdChild"
                                                        Storyboard.TargetProperty="(Background).Color" From="Transparent" To="#dce1de"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>

                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <ColorAnimation Storyboard.TargetName="bdChild"
 Storyboard.TargetProperty="(Background).Color" From="#dce1de" To="Transparent"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RadioButton.Style>
            </RadioButton>
        </DataTemplate>

        <Style x:Key="ArchiveButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>-->
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/> <!--back icon-->
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.ColumnSpan="2" x:Name="bg" Opacity=".6"/>
                                <Path Data="{Binding Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}"
                                      Fill="Black"
                                      Margin="20,0"
                                      HorizontalAlignment="Left"
                                      Style="{StaticResource {x:Type Path}}"/>
                                <TextBlock Grid.ColumnSpan="2"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center">
                                    <Run Text="Archived ("/>
                                    <Run Text="{Binding DataContext.ArchivedChats.Count, Mode=OneWay, ElementName=Chats}"/>
                                    <Run Text=")"/>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--if no chats archived than hide button-->
                            <DataTrigger Binding="{Binding DataContext.ArchivedChats.Count, ElementName=Chats}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#dce1de"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#dce1de"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Add animation on chat item add-->
        <ItemsPanelTemplate x:Key="dtitemPanel">
            <StackPanel>
                <b:Interaction.Behaviors>
                    <b:FluidMoveBehavior AppliesTo="Children" Duration="00:00:00.25"/>
                </b:Interaction.Behaviors>
            </StackPanel>
        </ItemsPanelTemplate>
    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                  Padding="15">
        <Grid>
            <Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Visibility, ElementName=ArchivePanel}" Value="Visible">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/> <!--Archived Chats-->
            </Grid.RowDefinitions>
            <!--Pinned/UnPinned chat list-->
                <StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FilteredPinnedChats.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource pinned}"
                          StrokeThickness="1"
                          Stroke="Black"
                      Fill="Black"/>
                        <TextBlock Text="Pinned"
                           Margin="10,0"
                           FontWeight="SemiBold"
                           VerticalAlignment="Center"/>
                    </StackPanel>

                    <!--ChatList-->
                    <ItemsControl ItemsSource="{Binding FilteredPinnedChats}"
                          ItemTemplate="{StaticResource ChatButtonItemTemplate}"
                          ItemsPanel="{StaticResource dtitemPanel}"
                          Padding="0,15">
                    </ItemsControl>
                </StackPanel>
                <StackPanel Grid.Row="1">
                    <!--All Chats-->
                    <StackPanel Orientation="Horizontal">
                        <Path Data="{StaticResource allchats}"
                    Fill="Black"/>
                        <TextBlock Text="All Chats"
                                 Margin="10,0"
                                FontWeight="SemiBold"
                                VerticalAlignment="Center"/>
                    </StackPanel>

                <!--ChatList-->
                    <ItemsControl ItemsSource="{Binding FilteredChats}"
                                ItemTemplate="{StaticResource ChatButtonItemTemplate}"
                                  ItemsPanel="{StaticResource dtitemPanel}"
                                Padding="0,15">
                    </ItemsControl>
                    <RadioButton x:Name="btnOpenArchive"
                             GroupName="Archive"
                             Style="{StaticResource ArchiveButtonStyle}"/>
            </StackPanel>
            </Grid>

            <!--Archive/UnArchive chat list-->
                <StackPanel Grid.Row="1"
                        x:Name="ArchivePanel">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnOpenArchive}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnCloseArchive}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnCloseArchive}" Value="Collapsed">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <RadioButton x:Name="btnCloseArchive"
                             GroupName="Archive"
                             IsChecked="True"
                             Style="{StaticResource ArchiveButtonStyle}"
                             Content="{StaticResource back}"
                             Margin="0,15"/>
                    <ItemsControl Background="Transparent"
                              BorderThickness="0"
                                  ItemsPanel="{StaticResource dtitemPanel}"
                              ItemsSource="{Binding ArchivedChats}"
                              ItemTemplate="{StaticResource ChatButtonItemTemplate}"/>
                </StackPanel>
            </Grid>
    </ScrollViewer>
</UserControl>
